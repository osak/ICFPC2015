#! /usr/bin/python
from argparse import ArgumentParser
import json
from src.python.runner import run
from multiprocessing import Pool
import src.python.daisaku


def mapper(args):
    return run(*args)


def main():
    parser = ArgumentParser()
    parser.add_argument('-f', metavar='json', nargs='*', type=file)
    parser.add_argument('-t', metavar='timelimit', type=int)
    parser.add_argument('-m', metavar='memorylimit', type=int)
    parser.add_argument('-c', metavar='cores', type=int, default=1)
    parser.add_argument('-p', metavar='phrase', nargs='*', type=str)
    args = parser.parse_args()

    if args.p:
        src.python.daisaku.spell_list = args.p

    pool = Pool(args.c)
    queries = []
    for conffile in args.f:
        config = json.load(conffile)
        for seed in config['sourceSeeds']:
            queries.append(('./solution.exe', config, seed))

    result = pool.map(mapper, queries)
    print json.dumps(result)


if __name__ == '__main__':
    main()
